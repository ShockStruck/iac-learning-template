---

version: '3'

set: [pipefail]
shopt: [globstar]

includes:
  compose: .taskfiles/compose
  sops: .taskfiles/sops
  bootstrap: .taskfiles/bootstrap
  validate: .taskfiles/validate
  readme: .taskfiles/readme
  examples: .taskfiles/examples

vars:
  COMPOSE_FILE: "{{.ROOT_DIR}}/examples/docker-compose.yml"
  ENC_ENV: "{{.ROOT_DIR}}/secrets/app.sops.env"
  PROJECT_NAME: "iac-learning-template"

env:
  SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/.secrets/age.key"
  TASK_X_ENV_PRECEDENCE: 1
  TASK_X_MAP_VARIABLES: 0

tasks:

  start:
    desc: "üöÄ Quick start - bootstrap and run example services"
    cmds:
      - task: bootstrap:all
      - task: examples:up
      - task: validate:health

  # === Learning Path Tasks ===
  
  basics:
    desc: "üìö Step 1: Learn basic IaC concepts with interactive examples"
    cmds:
      - echo "=== Infrastructure as Code Learning Path ==="
      - echo "Reading docs/01-iac-basics.md"
      - echo "Hands-on - Basic Task automation"
      - task: validate:taskfile
      - echo "Basics complete! Next - task secrets"

  secrets:
    desc: "üîê Step 2: Learn secrets management with SOPS and Age"
    cmds:
      - echo "=== SOPS Secrets Management Learning ==="
      - echo "Reading docs/02-secrets-management.md"
      - echo "Hands-on - SOPS encryption practice"
      - task: sops:tutorial
      - echo "Secrets complete! Next - task compose"

  compose:
    desc: "üê≥ Step 3: Learn Docker Compose with environment integration"
    cmds:
      - echo "=== Docker Compose Learning ==="
      - echo "Reading docs/03-docker-compose.md"
      - echo "Hands-on - Compose with secrets substitution"
      - task: examples:demo
      - echo "Compose complete! Next - task automation"

  automation:
    desc: "‚öôÔ∏è Step 4: Learn infrastructure automation patterns"
    cmds:
      - echo "=== Infrastructure Automation Learning ==="
      - echo "Reading docs/04-automation-patterns.md"
      - echo "Hands-on - Advanced Task workflows"
      - task: examples:advanced
      - echo "Automation complete! You've mastered IaC basics!"

  # === Service Management ===

  up:
    desc: "üöÄ Start all services with secrets injection"
    cmds:
      - task: compose:up

  down:
    desc: "üõë Stop all services"
    cmds:
      - task: compose:down

  status:
    desc: "üìä Show system status"
    cmds:
      - task: compose:ps
      - task: validate:health

  logs:
    desc: "üìù Show logs (usage: task logs -- <service>)"
    cmds:
      - task: compose:logs -- {{.CLI_ARGS}}

  # === Development Environment ===

  dev:setup:
    desc: "üõ†Ô∏è Setup development environment"
    cmds:
      - task: bootstrap:dev
      - echo "Development environment ready"

  dev:reset:
    desc: "üîÑ Reset development environment"
    cmds:
      - task: compose:down
      - task: sops:reset
      - echo "Development environment reset"

  # === Quality Assurance ===

  check:
    desc: "üîç Run all validation checks"
    cmds:
      - task: validate:all

  # === Documentation ===

  docs:
    desc: "üìñ Generate all documentation"
    cmds:
      - task: readme:generate
      - echo "Documentation updated"

  docs:serve:
    desc: "üåê Serve documentation locally"
    cmds:
      - echo "Serving documentation at http://localhost:8080"
      - echo "Tip - Edit docs/ files and refresh browser"
      - python3 -m http.server 8080 --directory docs

  # === Help and Information ===

  help:
    desc: "‚ùì Show help and learning path"
    cmds:
      - echo "=== IaC Learning Template Help ==="
      - echo ""
      - echo "Quick Start:"
      - echo "  task start              # Bootstrap everything and start services"
      - echo ""
      - echo "Learning Path (follow in order):"
      - echo "  task basics             # Learn IaC fundamentals"
      - echo "  task secrets            # Master SOPS secrets management"
      - echo "  task compose            # Docker Compose with secrets"
      - echo "  task automation         # Advanced automation patterns"
      - echo ""
      - echo "Service Management:"
      - echo "  task up                 # Start all services"
      - echo "  task down               # Stop all services"
      - echo "  task status             # Show service status"
      - echo "  task logs -- <service>  # View service logs"
      - echo ""
      - echo "Development:"
      - echo "  task dev:setup          # Setup dev environment"
      - echo "  task check              # Run validation checks"
      - echo ""
      - echo "Documentation:"
      - echo "  task docs               # Generate documentation"
      - echo "  task docs:serve         # Serve docs locally"
      - echo ""
      - echo "Need help? Check README.md or docs/ folder"

  clean:
    desc: "üßπ Clean up all generated files and containers"
    cmds:
      - task: compose:down
      - docker system prune -f --volumes
      - rm -rf .task .secrets/temp .compose-env
      - echo "Cleanup complete"
