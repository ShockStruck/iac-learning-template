---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
# IaC Learning Template - Main Taskfile
# Educational Infrastructure as Code template with practical examples
version: '3'

set: [pipefail]
shopt: [globstar]

includes:
  compose: .taskfiles/compose
  sops: .taskfiles/sops
  bootstrap: .taskfiles/bootstrap
  validate: .taskfiles/validate
  readme: .taskfiles/readme
  examples: .taskfiles/examples

vars:
  COMPOSE_FILE: "{{.ROOT_DIR}}/examples/docker-compose.yml"
  ENC_ENV: "{{.ROOT_DIR}}/secrets/app.sops.env"
  PROJECT_NAME: "iac-learning-template"

env:
  SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/.secrets/age.key"
  TASK_X_ENV_PRECEDENCE: 1
  TASK_X_MAP_VARIABLES: 0

tasks:
  # === Quick Start Commands ===
  start:
    desc: "🚀 Quick start - bootstrap and run example services"
    cmds:
      - task: bootstrap:all
      - task: examples:up
      - task: validate:health
    
  # === Learning Path Commands ===
  learn:basics:
    desc: "📚 Step 1: Learn basic IaC concepts with interactive examples"
    cmds:
      - echo "=== Infrastructure as Code Learning Path ==="
      - echo "📖 Reading: docs/01-iac-basics.md"
      - echo "🔧 Hands-on: Basic Task automation"
      - task: validate:taskfile
      - echo "✅ Basics complete! Next: task learn:secrets"
      
  learn:secrets:
    desc: "🔐 Step 2: Learn secrets management with SOPS and Age"
    cmds:
      - echo "=== SOPS Secrets Management Learning ==="
      - echo "📖 Reading: docs/02-secrets-management.md"
      - echo "🔧 Hands-on: SOPS encryption practice"
      - task: sops:tutorial
      - echo "✅ Secrets complete! Next: task learn:compose"
      
  learn:compose:
    desc: "🐳 Step 3: Learn Docker Compose with environment integration"
    cmds:
      - echo "=== Docker Compose Learning ==="
      - echo "📖 Reading: docs/03-docker-compose.md"
      - echo "🔧 Hands-on: Compose with secrets substitution"
      - task: examples:demo
      - echo "✅ Compose complete! Next: task learn:automation"
      
  learn:automation:
    desc: "⚙️ Step 4: Learn infrastructure automation patterns"
    cmds:
      - echo "=== Infrastructure Automation Learning ==="
      - echo "📖 Reading: docs/04-automation-patterns.md"
      - echo "🔧 Hands-on: Advanced Task workflows"
      - task: examples:advanced
      - echo "✅ Automation complete! You've mastered IaC basics!"
      
  # === Core Operations ===
  up:
    desc: "🚀 Start all services with secrets injection"
    cmds:
      - task: compose:up
      
  down:
    desc: "🛑 Stop all services"
    cmds:
      - task: compose:down
      
  status:
    desc: "📊 Show system status"
    cmds:
      - task: compose:ps
      - task: validate:health
      
  logs:
    desc: "📝 Show logs (usage: task logs -- <service>)"
    cmds:
      - task: compose:logs -- {{.CLI_ARGS}}
      
  # === Development Commands ===
  dev:setup:
    desc: "🛠️ Setup development environment"
    cmds:
      - task: bootstrap:dev
      - echo "✅ Development environment ready"
      
  dev:reset:
    desc: "🔄 Reset development environment"
    cmds:
      - task: compose:down
      - task: sops:reset
      - echo "✅ Development environment reset"
      
  # === Validation and Health Checks ===
  check:
    desc: "🔍 Run all validation checks"
    cmds:
      - task: validate:all
      
  # === Documentation ===
  docs:
    desc: "📖 Generate all documentation"
    cmds:
      - task: readme:generate
      - echo "📚 Documentation updated"
      
  docs:serve:
    desc: "🌐 Serve documentation locally"
    cmds:
      - echo "📖 Serving documentation at http://localhost:8080"
      - echo "💡 Tip: Edit docs/ files and refresh browser"
      - python3 -m http.server 8080 --directory docs
      
  # === Help and Learning ===
  help:
    desc: "❓ Show help and learning path"
    cmds:
      - echo "=== IaC Learning Template Help ==="
      - echo ""
      - echo "🎯 Quick Start:"
      - echo "  task start              # Bootstrap and run everything"
      - echo ""
      - echo "📚 Learning Path (follow in order):"
      - echo "  task learn:basics       # Step 1: Basic IaC concepts"
      - echo "  task learn:secrets      # Step 2: Secrets management"
      - echo "  task learn:compose      # Step 3: Docker Compose"
      - echo "  task learn:automation   # Step 4: Automation patterns"
      - echo ""
      - echo "🔧 Development:"
      - echo "  task dev:setup          # Setup dev environment"
      - echo "  task up/down/status     # Service management"
      - echo "  task check              # Run all validations"
      - echo ""
      - echo "📖 Documentation:"
      - echo "  task docs               # Generate documentation"
      - echo "  task docs:serve         # Serve docs locally"
      - echo ""
      - echo "🆘 Need help? Check README.md or docs/ folder"
      
  # === Administrative ===
  clean:
    desc: "🧹 Clean up all generated files and containers"
    cmds:
      - task: compose:down
      - docker system prune -f --volumes
      - rm -rf .task .secrets/temp .compose-env
      - echo "✅ Cleanup complete"
